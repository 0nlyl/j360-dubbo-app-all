<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:beans="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <import resource="application-jdbc.xml"/>


    <bean id="idReaderListener" class="me.j360.dubbo.batch.listener.IdReaderListener"/>
    <batch:job id="batchJob" job-repository="jobRepository" restartable="true">
        <batch:step id="videoPostStep" allow-start-if-complete="true">
            <batch:tasklet >
                <batch:chunk reader="userReader" processor="userInfoItemProcess" writer="userInfoJdbcItemWriter"
                             commit-interval="1000" skip-limit="10" retry-limit="3">
                    <batch:skippable-exception-classes>
                        <batch:include class="me.j360.dubbo.base.exception.RepositoryException"/>
                    </batch:skippable-exception-classes>
                    <batch:retryable-exception-classes>
                        <batch:include class="org.springframework.dao.DeadlockLoserDataAccessException"/>
                    </batch:retryable-exception-classes>

                    <batch:listeners>
                        <batch:listener ref="idReaderListener" />
                    </batch:listeners>
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean" />
    <bean id="userReader" class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
        <property name="dataSource" ref="dataSource" />
        <property name="rowMapper">
            <bean class="me.j360.dubbo.batch.mapper.UserRowMapper" />
        </property>
        <property name="queryProvider">
            <bean class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
                <property name="dataSource" ref="dataSource"></property>
                <property name="selectClause" value="select id, uid create_time"/>
                <property name="fromClause" value="from user"/>
                <property name="whereClause" value="where is_del = 0 "/>
                <property name="sortKey" value="id"/>
            </bean>
        </property>
        <!--<property name="parameterValues">
            <map>
                <entry key="id" value="#{stepExecutionContext[id]}"/>
            </map>
        </property>-->
        <property name="pageSize" value="5"/>
        <property name="saveState" value="true"/>
    </bean>

    <bean id="userInfoItemProcess" class="me.j360.dubbo.batch.process.UserInfoItemProcess"/>

    <bean id="userInfoJdbcItemWriter" class="me.j360.dubbo.batch.writer.UserInfoJdbcItemWriter"></bean>

    <bean id="taskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>


</beans>
